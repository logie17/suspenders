#+title Logan's emacs configuration
#+PROPERTY: header-args:emacs-lisp :tangle ./init.el

* Background

I was originally inspired to organize my dot files after watching the series: [[https://www.youtube.com/watch?v=74zOY-vgkyw&list=PLEoMzSkcN8oPH1au7H6B7bBJ4ZO7BXjSZ&index=1][Emacs From Scatch]]. Some of the dot file implementation is based on that, but with my own preferences.

* Package

For package management I will be using package (builtin) and [[https://github.com/jwiegley/use-package][use-package]].  
#+begin_src emacs-lisp

(require 'package)
(setq package-archives '(("melpa" . "https://melpa.org/packages/")
                         ("org" . "https://orgmode.org/elpa/")
                         ("elpa" . "https://elpa.gnu.org/packages/")))

(package-initialize)
(unless package-archive-contents
 (package-refresh-contents))

;; Initialize use-package on non-Linux platforms
(unless (package-installed-p 'use-package)
   (package-install 'use-package))

(require 'use-package)

(setq use-package-always-ensure t)
#+end_src

* Basic UI Configuration
Doing some basic setup

#+begin_src emacs-lisp

  (setq inhibit-startup-message t)
  ;; Disable scroll bar
  (scroll-bar-mode -1)

  ;; Disable toolbar
  (tool-bar-mode -1)

  ;; Disable tooltips
  (tooltip-mode -1)

  ;; Give the fringe some breathing room
  (set-fringe-mode 10)

  ;; Disable menu bar
  (menu-bar-mode -1)

  ;; Flash bell
  (setq visible-bell t)

  ;; Ctrl-g / ESC do the same thing now
  (global-set-key (kbd "<escape>") 'keyboard-escape-quit)

  (global-display-line-numbers-mode t)

  (column-number-mode)

  ;; disable line numbers in certain modes
  (dolist (mode '(org-mode-hook
                  term-mode-hook
                  shell-mode-hook
                  eshell-mode-hook))
    (add-hook mode (lambda () (display-line-numbers-mode 0))))
#+end_src

* Themes/Font

Opting to use [[https://github.com/doomemacs/themes][Doom Themes]] and [[https://github.com/seagle0128/doom-modeline][Doom Modeline]]. Other packages are include: [[https://github.com/domtronn/all-the-icons.el][all-the-icons]].


#+begin_src emacs-lisp
  (use-package all-the-icons)

  (use-package doom-themes
    :init (load-theme 'doom-dracula t))

  ;; todo
  (use-package doom-modeline
    :ensure t
    :custom ((doom-modeline height 35))
    :init (doom-modeline-mode 1))

    ;; Currently not used
  (defvar logan/default-font-size 180)
  (defvar logan/default-variable-font-size 180)
  ;; (set-face-attribute 'default nil :font "Fira Code" :height 280)

  (use-package rainbow-delimiters
    :hook (prog-mode . rainbow-delimiters-mode))

#+end_src

** TODO Fonts are currently not installed and working

* Which Key


#+begin_src emacs-lisp

  (use-package which-key
    :init (which-key-mode)
    :diminish which-key-mode
    :config
    (setq which-key-idle-delay 0.3))

#+end_src

* Ivy/Counsel
#+begin_src emacs-lisp
  (use-package ivy
    :diminish
    :bind (("C-s" . swiper)
           :map ivy-minibuffer-map
           ("TAB" . ivy-alt-done)	
           ("C-l" . ivy-alt-done)
           ("C-j" . ivy-next-line)
           ("C-k" . ivy-previous-line)
           :map ivy-switch-buffer-map
           ("C-k" . ivy-previous-line)
           ("C-l" . ivy-done)
           ("C-d" . ivy-switch-buffer-kill)
           :map ivy-reverse-i-search-map
           ("C-k" . ivy-previous-line)
           ("C-d" . ivy-reverse-i-search-kill))
    :config
    (ivy-mode 1))


  (use-package ivy-rich
    :init
    (ivy-rich-mode 1))

  ;; get ivy rich stuff into useful counsel commands
  (use-package counsel
    :bind (("M-x" . counsel-M-x)
           ("C-x b" . counsel-ibuffer)
           ("C-x C-f" . counsel-find-file)
           :map minibuffer-local-map
           ("C-r" . 'counsel-minibuffer-history)))

#+end_src

* Smart-Tab with Hippie Expand



#+begin_src emacs-lisp
  (setq completion-ignore-case t)
  (setq read-file-name-completion-ignore-case t)
  (use-package smart-tab
  :config
  (global-smart-tab-mode 1)
  (setq hippie-expand-try-functions-list (list
                                          'try-expand-dabbrev-visible
                                          'try-expand-dabbrev
                                          'try-expand-dabbrev-all-buffers
                                          'try-expand-dabbrev-from-kill
                                          'try-complete-file-name-partially
                                          'try-complete-file-name
                                          ))

  (setq smart-tab-using-hippie-expand t)
  (setq smart-tab-disabled-major-modes '(term-mode inf-ruby-mode org-mode eshell-mode))

#+end_src


#+begin_src emacs-lisp
  (require 'org-tempo)

  (add-to-list 'org-structure-template-alist '("sh" . "src shell"))
  (add-to-list 'org-structure-template-alist '("el" . "src emacs-lisp"))
  (add-to-list 'org-structure-template-alist '("py" . "src python"))

#+end_src

#+begin_src emacs-lisp

  (org-babel-do-load-languages
   'org-babel-load-languages
   '((emacs-lisp . t)
     (perl . t )
     (python . t )))

  (setq org-confirm-babel-evaluate nil)
#+end_src
